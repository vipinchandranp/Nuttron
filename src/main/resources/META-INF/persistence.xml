<?xml version="1.0"?>
<persistence xmlns="http://java.sun.com/xml/ns/persistence"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
	version="2.0">

 	<persistence-unit name="ogm-jpa-tutorial"
		transaction-type="JTA">
		<!-- Use the Hibernate OGM provider: configuration will be transparent -->
		<provider>org.hibernate.ogm.jpa.HibernateOgmPersistence</provider>
		<properties>
		<!-- 	Here you will pick which NoSQL technology to use, and configure it; 
				in this example we start a local in-memory Infinispan node. -->
			<property name="hibernate.ogm.datastore.provider" value="infinispan" />
		</properties>
	</persistence-unit>
	<persistence-unit name="hibernate">
		<class>com.nuttron.wind.EntityMain</class>
		<properties>
			<property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/hibernate" />
			<property name="javax.persistence.jdbc.user" value="root" />
			<property name="javax.persistence.jdbc.password" value="root" />
			<property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver" />
			<property name="hibernate.show_sql" value="true" />
			<property name="hibernate.format_sql" value="true" />
			<property name="hibernate.dialect" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
			<property name="hibernate.hbm2ddl.auto" value="validate" />
			<!-- Configuring Connection Pool -->
			<property name="hibernate.c3p0.min_size" value="5" />
			<property name="hibernate.c3p0.max_size" value="20" />
			<property name="hibernate.c3p0.timeout" value="500" />
			<property name="hibernate.c3p0.max_statements" value="50" />
			<property name="hibernate.c3p0.idle_test_period" value="2000" />
			<property name="hibernate.archive.autodetection" value="class" />
		</properties>
	</persistence-unit>

	<persistence-unit name="eclipselink" transaction-type="RESOURCE_LOCAL">
		<provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>
		<exclude-unlisted-classes>false</exclude-unlisted-classes>
		<properties>
			<property name="eclipselink.canonicalmodel.subpackage"
				value="one" />
			<property name="eclipselink.jdbc.batch-writing" value="JDBC" />
			<property name="eclipselink.jdbc.batch-writing.size" value="1000" />
			<property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/hibernate" />
			<property name="javax.persistence.jdbc.password" value="root" />
			<property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver" />
			<property name="javax.persistence.jdbc.user" value="root" />
			<property name="javax.persistence.schema-generation.database.action"
				value="drop-and-create" />
		</properties>
	</persistence-unit>
	
	<persistence-unit name="events">
      <shared-cache-mode>ENABLE_SELECTIVE</shared-cache-mode>
      <properties>
         <!-- H2 in-memory database -->
         <property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect"/>
         <property name="hibernate.connection.url" value="jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE"/>
         <property name="hibernate.connection.driver_class" value="org.h2.Driver"/>
         <property name="hibernate.connection.username" value="sa"/>
         <property name="hibernate.connection.password" value=""/>
 
         <!-- Create/drop database in each run -->
         <property name="hibernate.hbm2ddl.auto" value="create-drop" />
 
         <!-- Enables second level cache -->
         <property name="hibernate.cache.use_second_level_cache" value="true"/>
         <!-- Enable query cache -->
         <property name="hibernate.cache.use_query_cache" value="true"/>
 
         <!-- Use Infinispan second level cache provider -->
         <property name="hibernate.cache.region.factory_class"
                   value="infinispan"/>
         <!-- Force using local configuration when only using a single node.
              Otherwise a clustered configuration is loaded. -->
         <property name="hibernate.cache.infinispan.cfg"
                   value="org/infinispan/hibernate/cache/commons/builder/infinispan-configs-local.xml"/>
 
         <!-- Generate statistics to see effects of second level cache -->
         <property name="hibernate.generate_statistics" value="true" />
 
         <!-- Entity specific configuration, e.g. via property:
                 hibernate.cache.infinispan.<Entity FQN>.expiration.max_idle
         -->
         <property name="hibernate.cache.infinispan.org.infinispan.tutorial.simple.hibernate.cache.local.model.Person.expiration.max_idle"
                   value= "1000"/>
      </properties>
   </persistence-unit>
>>>>>>> cb042692012dd76474a8db6f1546a9828ccb06bd
</persistence>